// Tooltip

$('btn1').tooltip({
  trigger: 'click',
  placement: 'bottom'
});

$('btn2').tooltip({
	trigger: 'click',
	placement: 'bottom'
  });
  
function setTooltip(elem, message) {
	$(elem).tooltip('hide')
	.attr('data-original-title', message)
	.tooltip('show');
}

function hideTooltip(elem) {
	setTimeout(function() {
	$(elem).tooltip('hide');
}, 1000);
}
// Clipboard

var clipboard1 = new Clipboard('btn1');

clipboard1.on('success', function(e) {
  setTooltip('btn1', 'Copied!');
  hideTooltip('btn1');
});

clipboard1.on('error', function(e) {
  setTooltip('btn1', 'Failed!');
  hideTooltip('btn1');
});

var clipboard2 = new Clipboard('btn2');

clipboard2.on('success', function(e) {
  setTooltip('btn2', 'Copied!');
  hideTooltip('btn2');
});

clipboard2.on('error', function(e) {
  setTooltip('btn2', 'Failed!');
  hideTooltip('btn2');
});

function copyResumeLink(button) {
	if (lang_selected.classList == "english")
		button.setAttribute("data-clipboard-text", "https://alinakrav.com/resume");
	else
		button.setAttribute("data-clipboard-text", "https://alinakrav.com/resumeRus");
}

window.addEventListener('load', () => {
	const t = window,
		e = document.documentElement;
	if (e.classList.remove("no-js"), e.classList.add("js"), document.body.classList.contains("has-animations")) {
		const t = window.sr = ScrollReveal();
		t.reveal(".feature", {
			duration: 600,
			distance: "20px",
			easing: "cubic-bezier(0.5, -0.01, 0, 1.005)",
			origin: "right",
			interval: 100
		}), t.reveal(".scroll-together", {
			duration: 600,
			distance: "20px",
			easing: "cubic-bezier(0.5, -0.01, 0, 1.005)",
			origin: "right",
			interval: 100
		}), t.reveal(".media-canvas", {
			duration: 600,
			scale: ".95",
			easing: "cubic-bezier(0.5, -0.01, 0, 1.005)",
			viewFactor: .2
			// define these attributes for all project containers
		}), t.reveal(".scroll-image, .project > div", {
			duration: 600,
			scale: ".95",
			easing: "cubic-bezier(0.5, -0.01, 0, 1.005)",
			viewFactor: .2
		}), t.reveal(".scroll-text, .project > p, .project > h3", {
			duration: 600,
			scale: ".95",
			easing: "cubic-bezier(0.5, -0.01, 0, 1.005)",
			viewFactor: .25
		})
	}
	document.onload = function(){
		const n = document.querySelector(".device-mockup");
		n.complete ? i() : n.addEventListener("load", i);
	}

	function i() {
		n.classList.add("has-loaded")
	}
	const s = document.querySelector(".features"),
		a = s.querySelector(".section-title"),
		o = document.querySelector(".feature-inner");

	function r() {
		let t = s.querySelector(".features-inner").getBoundingClientRect().left,
			e = o.getBoundingClientRect().left,
			n = parseInt(e - t);
		// a.style.marginLeft = e > t ? `${n}px` : 0
	}
	r(), t.addEventListener("resize", r);
	const c = document.querySelectorAll(".is-moving-object");
	let l = 0,
		d = 0,
		u = 0,
		g = 0,
		f = 0,
		m = e.clientWidth,
		p = e.clientHeight;
	c && t.addEventListener("mousemove", function(t, e) {
		let n = null,
			i = e;
		return (...e) => {
			let s = Date.now();
			(!n || s - n >= i) && (n = s, t.apply(this, e))
		}
	}(function(e) {
		! function(e, n) {
			l = e.pageX, d = e.pageY, u = t.scrollY, g = m / 2 - l, f = p / 2 - (d - u);
			for (let t = 0; t < n.length; t++) {
				const e = n[t].getAttribute("data-translating-factor") || 20,
					i = n[t].getAttribute("data-rotating-factor") || 20,
					s = n[t].getAttribute("data-perspective") || 500;
				let a = [];
				n[t].classList.contains("is-translating") && a.push("translate(" + g / e + "px, " + f / e + "px)"), n[t].classList.contains("is-rotating") && a.push("perspective(" + s + "px) rotateY(" + -g / i + "deg) rotateX(" + f / i + "deg)"), (n[t].classList.contains("is-translating") || n[t].classList.contains("is-rotating")) && (a = a.join(" "), n[t].style.transform = a, n[t].style.transition = "transform 1s ease-out", n[t].style.transformStyle = "preserve-3d", n[t].style.backfaceVisibility = "hidden")
			}
		}(e, c)
	}, 150))
});

// fullscreen resume modal

// set source for iframe on first open to avoid loading issues
document.getElementById("resume-btn").addEventListener("click", function(){document.getElementById("resume-content").src = "assets/Alina - Resume.pdf";}, {once: true});

// when resume modal is opened/closed
function toggleModal(on) {
	resume_modal.classList.toggle('hidden');
	if (on) {
		$("html").css("overflow-y", "hidden");
		document.addEventListener('keyup', closePdf);
	} else {
		$("html").css("overflow-y", "auto");
		document.removeEventListener('keyup', closePdf);
	}
}

function changeLang() {
	lang_selected.classList.add("noHover");
	lang_selected.classList.toggle("english");
	if (lang_selected.classList.contains("english")) {
		lang_selected.innerHTML = 'üá¨üáß English<p style="display:inline; font-size:10px; padding-left:10px;">&#9660</p><div id="lang_menu" onclick="changeLang()">üá∑üá∫ –†—É—Å—Å–∫–∏–π</div>';
		document.getElementById("resume-content").src = "assets/Alina - Resume.pdf";
		lang_box.style.marginRight = '30px';
		circle_link.style.right = '159px';
	}
	else {
		lang_selected.innerHTML = 'üá∑üá∫ –†—É—Å—Å–∫–∏–π<p style="display:inline; font-size:10px; padding-left:10px;">&#9660</p><div id="lang_menu" onclick="changeLang()">üá¨üáß English</div>';
		document.getElementById("resume-content").src = "assets/Alina - Resume (RUS, ENG).pdf";
		lang_box.style.marginRight = '47px';
		circle_link.style.right = '176px';
	}
	setTimeout(function() {
		lang_selected.classList.remove("noHover");
	}, 500);
}

function closePdf(event) {
	if (event.key === 'Escape')
		toggleModal(false);
}

// Custom scrollbar
var html = document.getElementById('html');
var body = document.getElementById('body');
var header = document.getElementById('header');

let browser = bowser.getParser(window.navigator.userAgent).parsedResult.browser.name;
let isChrome = browser == "Chrome";
let isEdge = browser == "Microsoft Edge";
let isOpera = browser == "Opera";
let isMobile = false;
(function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))) isMobile = true;})(navigator.userAgent||navigator.vendor||window.opera);

var scrollingFast = false;
var scrollingSlow = false;
// scrollbar is only transparent on 3 browsers
if (!isMobile && (isChrome || isEdge || isOpera)) {
	// start fast listener on start
	document.addEventListener('scroll', function(){scrollingFast=true; scrollingSlow=true;}, {passive: true});
	scrollingInterval = setInterval(intervalFunc,150);
	var checkingScroll = true;
	// remove scrolling listener when far away from header
	setInterval(function() {
		if (scrollingSlow) {
			scrollingSlow = false;
			if (((html.scrollTop - header.height)/header.height) > 2) {
				if (checkingScroll) {
					clearInterval(scrollingInterval);
					checkingScroll = false;
				}
			} else if (!checkingScroll) {
				scrollingInterval = setInterval(intervalFunc,150);
				checkingScroll = true;
			}
		}
	},3000);
} else {
	console.log('Browser does not support transparent scrollbars; scrollbar color will remain constant.');
	body.classList.remove('bodyShowsHeader');
}

function intervalFunc() {
	if (scrollingFast) {
        scrollingFast = false;
        changeScrollColor();
    }
}

// change scrollbar colour for header image
function changeScrollColor() {
	let visible = ((html.scrollTop - header.height)/header.height);
	let bodyClasses = body.classList;
	// classlist length before
	let before = bodyClasses.length;
	// scrollbar thumb enters blue background
	if (visible < -0.2) {
		bodyClasses.add('bodyShowsHeader');
	} else if (visible >= -0.2) {
		bodyClasses.remove('bodyShowsHeader');
	}
	// if classlist was changed, force redraw
	if (before != body.classList.length) {
		html.style.overflowX = 'auto';
		html.offsetHeight;
		html.style.overflowX = 'hidden';
	}
}